#!/usr/bin/perl

#Perl Modules
use DBI;
use DBD::mysql;
use File::Basename;
use Digest::MD5 'md5';

#Script Variables
$prog = basename($0);
$table;
$qry;

#Functions
sub execQry{

   #Database Variables
    $driver = "mysql";
    $host = "localhost";
    $database = "test";
    $usr = "root";
    $pwd = "letsgosb3";

    #Establish Database Connection
    $DBIConnect = DBI->connect("DBI:$driver:$database", $usr, $pwd) or die $DBI::errstr;

    #Prepare Query
    $Qry = $_[0];
    $sqlQry = $DBIConnect->prepare($Qry) or die "Can't prepare $Qry: $DBIConnect->errstr\n";

    #Execute Query
    $sqlQry->execute() or die "Can't execute the query: $sqlQry->errstr\n";

}

if(!defined $ARGV[0]){
    print "Missing keyword";
    exit;
}
#If program is linked from newEntry
if($prog eq "newEntry"){
    $table = $ARGV[0];
    $qry = "insert into $table";
    if($table eq "Assignment"){
	if($#ARGV != 4){
	    print "Invalid argument count\n";
	    exit;
	}
	else{
	    #Query is built from command line arguments
	    $aname = $ARGV[1];
	    $crsID = $ARGV[2];
	    $ddate = $ARGV[3];
	    $gflag = $ARGV[4];
	    $qry .= " (gFlag, Name, CourseID, DueDate) values ('$gflag','$aname', '$crsID', '$ddate');";
	    &execQry($qry);  #Subroutine is called to execute the query
	    $dirname = "/home/sb3/www/sb/courses/$crsID/$aname";
	    unless(mkdir $dirname, 0770){   #Creates a new directory at desired path
		die "Unable to create $dirname\n";
	    }
	    print "Successfully inserted assignment: $aname\n";
	    chmod(0770, $dirname) or die "Unable to chmod $dirname";
	}
    }
    else{
	$qry .= " values ('";
	if($table eq "Student"){
	    if($#ARGV != 2){
	        print "Invalid Argument Count\n";
	        exit;
	    }
	    #Query is built from command line arguments
	    $usrname = $ARGV[1];
	    $usrpwd = $ARGV[2];
	    $qry .= "$usrname', md5('$usrpwd'));";
	    &execQry($qry);  #Subroutine is called to execute the query
	    print "Successfully inserted student: $usrname\n";
	}
	elsif($table eq "Course"){
	    if($#ARGV != 1){
	        print "Invalid Argument Count\n";
	        exit;
	    }
	    #Query is built from command line arguments
	    $crsID = $ARGV[1];
	    $qry .= "$crsID');";
	    &execQry($qry);  #Subroutine is called to execute the query
	    $dirname = "/home/sb3/www/sb/courses/$crsID";
	    unless(mkdir $dirname, 0770){   #Creates a new directory at desired path
		die "Unable to create $dirname\n";
	    }
	    print "Successfully inserted course: $crsID\n";
	    chmod(0770, $dirname) or die "Unable to chmod $dirname";
	}
	elsif($table eq "Enrollment"){
	    if($#ARGV != 2){
	        print "Invalid Argument Count\n";
	        exit;
	    }
	    #Query is built from command line arguments
	    $usrname = $ARGV[1];
	    $crsID = $ARGV[2];
	    $qry .= "$usrname', '$crsID');";
	    &execQry($qry);  #Subroutine is called to execute the query
	    print "Successfully enrolled $usrname into $crsID\n";
	}
		elsif($table eq "Submission"){
            if($#ARGV != 4){
                print "Invalid Argument Count\n";
                exit;
            }
            #Query is built from command line arguments
            $studentId= $ARGV[1];
            $assignmentId = $ARGV[2];
            $grade = $ARGV[3];
            $comment = $ARGV[4];
            $qry = "UPDATE submission set Grade = $grade, Comments = '$comment' where StudentId = '$studentId' and AssignmentID = $assignmentId;";
            &execQry($qry);  #Subroutine is called to execute the query
            print "Successfully entered grade information for $studentId for assignment $assignmentId\n";
        }
	else{
	    print "Table $table does not exist\n"
	}
    }
}
elsif($prog eq "removeEntry"){
    $table = $ARGV[0];
    $qry = "delete from $table where";
    if($table eq "Assignment"){
	if($#ARGV != 2){
	    print "Invalid argument count\n";
	    exit;
	}
	else{
	    #Query is built from command line arguments
	    $aname = $ARGV[1];
	    $crsID = $ARGV[2];
	    $qry .= " Name = '$aname' and CourseID =  '$crsID';";
	    &execQry($qry);  #Subroutine is called to execute the query
#	    $qry = "delete from Submitted where Name = '$aname' and CourseID =  '$crsID';";
#	    &execQry($qry);  #Subroutine is called to execute the query
	    print "Successfully removed assignment: $aname in course: $crsID\n";
	}
    }
    elsif($table eq "Student"){
	if($#ARGV != 1){
	    print "Invalid Argument Count\n";
	    exit;
	}
	#Query is built from command line arguments
	$usrname = $ARGV[1];
	$qry .= " StudentID = '$usrname';";
	&execQry($qry);  #Subroutine is called to execute the query
	$qry = "delete from Enrollment where StudentID = '$usrname';";
	&execQry($qry);  #Subroutine is called to execute the query
#	$qry = "delete from Submitted where StudentID = '$usrname';";
#	&execQry($qry);  #Subroutine is called to execute the query
	print "Successfully removed student: $usrname\n";
    }
    elsif($table eq "Course"){
	if($#ARGV != 1){
	    print "Invalid Argument Count\n";
	    exit;
	}
	#Query is built from command line arguments
	$crsID = $ARGV[1];
	$qry .= " CourseID = '$crsID';";
	&execQry($qry);
	$qry = "delete from Enrollment where CourseID = '$crsID';";
	&execQry($qry);
	$qry = "delete from Assignment where CourseID = '$crsID';";
	&execQry($qry);
#	$qry = "delete from Submitted where CourseID = '$crsID';";
#	&execQry($qry);  #Subroutine is called to execute the query
	print "Successfully removed course: $crsID\n";
    }
    elsif($table eq "Enrollment"){
	if($#ARGV != 2){
	    print "Invalid Argument Count\n";
	    exit;
	}
	#Query is built from command line arguments
	$usrname = $ARGV[1];
	$crsID = $ARGV[2];
	$qry .= " StudentID = '$usrname' and CourseID =  '$crsID';";
	&execQry($qry);  #Subroutine is called to execute the query
	print "Successfully unenrrolled $usrname from $crsID\n";
    }
    else{
	print "Table $table does not exist\n"
    }
}
elsif($prog eq "editEntry"){
    $table = $ARGV[0];
    $qry = "update $table ";
    if($table eq "Assignment"){
	if($#ARGV != 4){
	    print "Invalid argument count\n";
	    exit;
	}
	else{
	    #Query is built from command line arguments
	    $aname = $ARGV[1];
	    $crsID = $ARGV[2];
	    $ddate = $ARGV[3];
	    $gflag = $ARGV[4];
	    $qry .= " set gFlag = '$gflag', Name = '$aname', CourseID = '$crsID',  DueDate = '$ddate' where CourseID = '$crsID';";
	    &execQry($qry);  #Subroutine is called to execute the query
	    print "Successfully changed due date for $aname\n";
	}
    }
    elsif($table eq "Student"){
	if($#ARGV != 2){
	    print "Invalid Argument Count\n";
	    exit;
	}
	#Query is built from command line arguments
	$usrname = $ARGV[1];
	$usrpwd = $ARGV[2];
	$qry .= " set Password = md5('$usrpwd') where StudentID = '$usrname';";
	&execQry($qry);  #Subroutine is called to execute the query
	print "Successfully changed password for $usrname\n";
    }
    elsif($table eq "Enrollment"){
	if($#ARGV != 3){
	    print "Invalid Argument Count\n";
	    exit;
	}
	#Query is built from command line arguments
	$usrname = $ARGV[1];
	$newcrsID = $ARGV[2];
	$oldcrsID = $ARGV[3];
	$qry .= " set CourseID = '$newcrsID' where StudentID = '$usrname' and CourseID = '$oldcrsID'";
	&execQry($qry);  #Subroutine is called to execute the query
	print "Successfully moved $usrname from $oldcrsID to $newcrsID\n";
    }
    else{
	print "Table $table does not exist\n"
    }
}
else{
    print "No such command";
}
